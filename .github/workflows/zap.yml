# on:
#   schedule: 
#     - cron: '15 0 1,15 * *' # https://crontab.guru/

on: [push]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: ZAP Proxy Baseline Scan - DAST PoC Target
    
    steps:
      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: zap-tests
      
      - name: Set Timestamp Environment Variable
        run: |
          echo "{timestamp}={$(date +%s)}" >> $GITHUB_STATE

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.8.0 # zaproxy/action-baseline@v0.10.0 # TODO env variable
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://altoro.testfire.net'
          rules_file_name: '.zap/rules.tsv'
          # TODO pass secrets in via variables for actual targets
          cmd_options: -a -T 3 -n .zap/contexts/authn_scan.context 
          
      # - name: Reporting
      #   run: |
      #     # report_json.json report_md.md report_html.html
      #     touch .zap/zap-${{ env.timestamp }}.json
      #     sudo cat report_json.json .zap/zap-${{ env.timestamp }}.json

      # - name: Prepare Report
      #   run: |
      #     mkdir -p .zap/results
      #     cat report_json.json > .zap/results/zap-${{ env.timestamp }}.json

      # - name: Reporting (Test)
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: zap-results-artifact
      #     path: .zap/results/zap-${{ env.timestamp }}.json

      - name: 
        uses: actions/checkout@v4
        with:
          run: |
            cat report_json.json > generated.txt
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "generated"
            git push
